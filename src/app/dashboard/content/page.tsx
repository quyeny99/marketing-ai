"use client";

import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { 
  Wand2, 
  FileText, 
  Image, 
  Video, 
  Share2, 
  Sparkles,
  Copy,
  Download,
  RefreshCw,
  Lightbulb,
  Target,
  Users,
  TrendingUp
} from "lucide-react";

export default function ContentAIPage() {
  const [contentType, setContentType] = useState("blog");
  const [isGenerating, setIsGenerating] = useState(false);
  const [generatedContent, setGeneratedContent] = useState("");

  const contentTypes = [
    { value: "blog", label: "Blog Post", icon: "üìù", description: "B√†i vi·∫øt blog d√†i" },
    { value: "social", label: "Social Media", icon: "üì±", description: "N·ªôi dung m·∫°ng x√£ h·ªôi" },
    { value: "email", label: "Email Marketing", icon: "üìß", description: "Email marketing" },
    { value: "ad", label: "Qu·∫£ng c√°o", icon: "üí∞", description: "Copy qu·∫£ng c√°o" },
    { value: "product", label: "M√¥ t·∫£ s·∫£n ph·∫©m", icon: "üõçÔ∏è", description: "M√¥ t·∫£ s·∫£n ph·∫©m" },
  ];

  const handleGenerate = async () => {
    setIsGenerating(true);
    // Simulate AI generation
    setTimeout(() => {
      setGeneratedContent(`ƒê√¢y l√† n·ªôi dung ƒë∆∞·ª£c t·∫°o b·ªüi AI cho lo·∫°i ${contentType}...

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.

Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

Key Points:
‚Ä¢ ƒêi·ªÉm quan tr·ªçng 1
‚Ä¢ ƒêi·ªÉm quan tr·ªçng 2
‚Ä¢ ƒêi·ªÉm quan tr·ªçng 3

K·∫øt lu·∫≠n: N·ªôi dung n√†y ƒë∆∞·ª£c t·∫°o t·ª± ƒë·ªông b·ªüi AI ƒë·ªÉ h·ªó tr·ª£ marketing c·ªßa b·∫°n.`);
      setIsGenerating(false);
    }, 3000);
  };

  const handleCopy = () => {
    navigator.clipboard.writeText(generatedContent);
    // You can add toast notification here
  };

  const handleDownload = () => {
    const blob = new Blob([generatedContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `content-ai-${contentType}.txt`;
    a.click();
    URL.revokeObjectURL(url);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-6 lg:py-8">
        {/* Header */}
        <div className="mb-6 sm:mb-8">
          <h1 className="text-2xl sm:text-3xl font-bold text-black mb-2">
            T·∫°o N·ªôi dung AI
          </h1>
          <p className="text-gray-600 text-sm sm:text-base">
            S·ª≠ d·ª•ng AI ƒë·ªÉ t·∫°o n·ªôi dung marketing ch·∫•t l∆∞·ª£ng cao
          </p>
        </div>

        {/* Stats Grid */}
        <div className="grid grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-4 lg:gap-6 mb-6 sm:mb-8">
          <Card className="bg-white border-gray-200">
            <CardContent className="p-3 sm:p-4 lg:p-6">
              <div className="flex items-center justify-between">
                <div className="min-w-0 flex-1">
                  <p className="text-xs sm:text-sm text-gray-600 truncate">N·ªôi dung ƒë√£ t·∫°o</p>
                  <p className="text-lg sm:text-xl lg:text-2xl font-bold text-black">24</p>
                </div>
                <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-blue-100 flex items-center justify-center shrink-0">
                  <FileText className="w-4 h-4 sm:w-5 sm:h-5 text-blue-600" />
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="bg-white border-gray-200">
            <CardContent className="p-3 sm:p-4 lg:p-6">
              <div className="flex items-center justify-between">
                <div className="min-w-0 flex-1">
                  <p className="text-xs sm:text-sm text-gray-600 truncate">Th·ªùi gian ti·∫øt ki·ªám</p>
                  <p className="text-lg sm:text-xl lg:text-2xl font-bold text-black">12h</p>
                </div>
                <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-green-100 flex items-center justify-center shrink-0">
                  <TrendingUp className="w-4 h-4 sm:w-5 sm:h-5 text-green-600" />
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="bg-white border-gray-200">
            <CardContent className="p-3 sm:p-4 lg:p-6">
              <div className="flex items-center justify-between">
                <div className="min-w-0 flex-1">
                  <p className="text-xs sm:text-sm text-gray-600 truncate">Ch·∫•t l∆∞·ª£ng</p>
                  <p className="text-lg sm:text-xl lg:text-2xl font-bold text-black">95%</p>
                </div>
                <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-purple-100 flex items-center justify-center shrink-0">
                  <Target className="w-4 h-4 sm:w-5 sm:h-5 text-purple-600" />
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="bg-white border-gray-200">
            <CardContent className="p-3 sm:p-4 lg:p-6">
              <div className="flex items-center justify-between">
                <div className="min-w-0 flex-1">
                  <p className="text-xs sm:text-sm text-gray-600 truncate">ƒê·ªëi t∆∞·ª£ng ti·∫øp c·∫≠n</p>
                  <p className="text-lg sm:text-xl lg:text-2xl font-bold text-black">2.4K</p>
                </div>
                <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-orange-100 flex items-center justify-center shrink-0">
                  <Users className="w-4 h-4 sm:w-5 sm:h-5 text-orange-600" />
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Main Content */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 sm:gap-8">
          {/* Content Creation Form */}
          <div className="lg:col-span-2">
            <Card className="bg-white border-gray-200">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Wand2 className="w-5 h-5 text-purple-600" />
                  T·∫°o N·ªôi dung AI
                </CardTitle>
                <CardDescription>
                  Ch·ªçn lo·∫°i n·ªôi dung v√† m√¥ t·∫£ ƒë·ªÉ AI t·∫°o n·ªôi dung ph√π h·ª£p
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                {/* Content Type Selection */}
                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                  {contentTypes.map((type) => (
                    <div
                      key={type.value}
                      className={`p-4 border rounded-lg cursor-pointer transition-all duration-200 ${
                        contentType === type.value
                          ? "border-purple-300 bg-purple-50 shadow-sm"
                          : "border-gray-200 hover:border-gray-300 hover:bg-gray-50"
                      }`}
                      onClick={() => setContentType(type.value)}
                    >
                      <div className="text-center">
                        <div className="text-2xl mb-2">{type.icon}</div>
                        <div className="font-medium text-gray-900">{type.label}</div>
                        <div className="text-xs text-gray-600 mt-1">{type.description}</div>
                      </div>
                    </div>
                  ))}
                </div>

                {/* Content Details */}
                <div className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Ti√™u ƒë·ªÅ ho·∫∑c ch·ªß ƒë·ªÅ *
                    </label>
                    <Input 
                      placeholder="VD: 10 c√°ch tƒÉng doanh s·ªë b√°n h√†ng online" 
                      className="w-full"
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      M√¥ t·∫£ chi ti·∫øt
                    </label>
                    <Textarea 
                      placeholder="M√¥ t·∫£ chi ti·∫øt v·ªÅ n·ªôi dung b·∫°n mu·ªën t·∫°o, ƒë·ªëi t∆∞·ª£ng m·ª•c ti√™u, tone gi·ªçng ƒëi·ªáu, v.v..." 
                      className="min-h-[100px] w-full"
                    />
                  </div>

                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        ƒê·ªô d√†i
                      </label>
                      <Select defaultValue="medium">
                        <SelectTrigger className="w-full">
                          <SelectValue placeholder="Ch·ªçn ƒë·ªô d√†i" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="short">Ng·∫Øn (100-200 t·ª´)</SelectItem>
                          <SelectItem value="medium">Trung b√¨nh (300-500 t·ª´)</SelectItem>
                          <SelectItem value="long">D√†i (800-1200 t·ª´)</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        Tone gi·ªçng ƒëi·ªáu
                      </label>
                      <Select defaultValue="professional">
                        <SelectTrigger className="w-full">
                          <SelectValue placeholder="Ch·ªçn tone" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="professional">Chuy√™n nghi·ªáp</SelectItem>
                          <SelectItem value="casual">Th√¢n thi·ªán</SelectItem>
                          <SelectItem value="creative">S√°ng t·∫°o</SelectItem>
                          <SelectItem value="persuasive">Thuy·∫øt ph·ª•c</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>
                  </div>

                  <Button 
                    onClick={handleGenerate}
                    disabled={isGenerating}
                    className="w-full bg-purple-600 hover:bg-purple-700 text-white py-3"
                  >
                    {isGenerating ? (
                      <>
                        <RefreshCw className="w-4 h-4 mr-2 animate-spin" />
                        ƒêang t·∫°o n·ªôi dung...
                      </>
                    ) : (
                      <>
                        <Sparkles className="w-4 h-4 mr-2" />
                        T·∫°o N·ªôi dung v·ªõi AI
                      </>
                    )}
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* AI Insights & Tips */}
          <div className="space-y-6">
            <Card className="bg-white border-gray-200">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Lightbulb className="w-5 h-5 text-yellow-600" />
                  G·ª£i √Ω AI
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="p-3 bg-blue-50 border border-blue-200 rounded-lg">
                  <p className="text-sm text-blue-800">
                    <strong>Tip:</strong> M√¥ t·∫£ c√†ng chi ti·∫øt, AI c√†ng t·∫°o ra n·ªôi dung ph√π h·ª£p v·ªõi nhu c·∫ßu c·ªßa b·∫°n.
                  </p>
                </div>
                <div className="p-3 bg-green-50 border border-green-200 rounded-lg">
                  <p className="text-sm text-green-800">
                    <strong>L∆∞u √Ω:</strong> N·ªôi dung ƒë∆∞·ª£c t·∫°o b·ªüi AI n√™n ƒë∆∞·ª£c review v√† ch·ªânh s·ª≠a tr∆∞·ªõc khi s·ª≠ d·ª•ng.
                  </p>
                </div>
                <div className="p-3 bg-purple-50 border border-purple-200 rounded-lg">
                  <p className="text-sm text-purple-800">
                    <strong>Th·ªëng k√™:</strong> 95% ng∆∞·ªùi d√πng ti·∫øt ki·ªám ƒë∆∞·ª£c √≠t nh·∫•t 2 gi·ªù m·ªói tu·∫ßn khi s·ª≠ d·ª•ng AI.
                  </p>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-white border-gray-200">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <TrendingUp className="w-5 h-5 text-green-600" />
                  Xu h∆∞·ªõng N·ªôi dung
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-600">Video ng·∫Øn</span>
                  <Badge variant="secondary" className="bg-green-100 text-green-700">
                    +45%
                  </Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-600">Infographic</span>
                  <Badge variant="secondary" className="bg-blue-100 text-blue-700">
                    +32%
                  </Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-600">Case study</span>
                  <Badge variant="secondary" className="bg-purple-100 text-purple-700">
                    +28%
                  </Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-600">User-generated</span>
                  <Badge variant="secondary" className="bg-orange-100 text-orange-700">
                    +18%
                  </Badge>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Generated Content Display */}
        {generatedContent && (
          <div className="mt-8">
            <Card className="bg-white border-gray-200">
              <CardHeader>
                <CardTitle className="flex items-center justify-between">
                  <span>N·ªôi dung ƒë√£ t·∫°o</span>
                  <div className="flex gap-2">
                    <Button
                      onClick={handleCopy}
                      variant="outline"
                      size="sm"
                      className="flex items-center gap-2"
                    >
                      <Copy className="w-4 h-4" />
                      Sao ch√©p
                    </Button>
                    <Button
                      onClick={handleDownload}
                      variant="outline"
                      size="sm"
                      className="flex items-center gap-2"
                    >
                      <Download className="w-4 h-4" />
                      T·∫£i xu·ªëng
                    </Button>
                  </div>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="bg-gray-50 p-4 rounded-lg">
                  <pre className="whitespace-pre-wrap text-sm text-gray-800 font-sans">
                    {generatedContent}
                  </pre>
                </div>
              </CardContent>
            </Card>
          </div>
        )}

        <Separator className="my-8" />
        <div className="text-sm text-gray-600">
          G·ª£i √Ω: S·ª≠ d·ª•ng AI ƒë·ªÉ t·∫°o n·ªôi dung ban ƒë·∫ßu, sau ƒë√≥ ch·ªânh s·ª≠a ƒë·ªÉ ph√π h·ª£p v·ªõi brand voice v√† m·ª•c ti√™u c·ª• th·ªÉ c·ªßa b·∫°n.
        </div>
      </div>
    </div>
  );
}


