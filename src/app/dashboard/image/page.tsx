"use client";

import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { 
  Image as ImageIcon, 
  Download, 
  RefreshCw, 
  Sparkles,
  Copy,
  Palette,
  Camera,
  Target,
  Lightbulb,
  BarChart3,
  Heart,
  Share2,
  Eye
} from "lucide-react";

export default function ImageAIPage() {
  const [imageType, setImageType] = useState("product");
  const [isGenerating, setIsGenerating] = useState(false);
  const [generatedImages, setGeneratedImages] = useState<string[]>([]);

  const imageTypes = [
    { value: "product", label: "S·∫£n ph·∫©m", icon: "üõçÔ∏è", description: "H√¨nh ·∫£nh s·∫£n ph·∫©m chuy√™n nghi·ªáp" },
    { value: "social", label: "M·∫°ng x√£ h·ªôi", icon: "üì±", description: "H√¨nh ·∫£nh cho social media" },
    { value: "banner", label: "Banner qu·∫£ng c√°o", icon: "üéØ", description: "Banner qu·∫£ng c√°o online" },
    { value: "logo", label: "Logo & Brand", icon: "üè∑Ô∏è", description: "Logo v√† nh·∫≠n di·ªán th∆∞∆°ng hi·ªáu" },
    { value: "illustration", label: "Minh h·ªça", icon: "üé®", description: "H√¨nh minh h·ªça s√°ng t·∫°o" },
  ];

  const handleGenerate = async () => {
    setIsGenerating(true);
    // Simulate AI generation
    setTimeout(() => {
      const mockImages = [
        "https://via.placeholder.com/512x512/4F46E5/FFFFFF?text=AI+Generated+Image+1",
        "https://via.placeholder.com/512x512/7C3AED/FFFFFF?text=AI+Generated+Image+2",
        "https://via.placeholder.com/512x512/DC2626/FFFFFF?text=AI+Generated+Image+3",
        "https://via.placeholder.com/512x512/059669/FFFFFF?text=AI+Generated+Image+4"
      ];
      setGeneratedImages(mockImages);
      setIsGenerating(false);
    }, 4000);
  };

  const handleDownload = (imageUrl: string, index: number) => {
    const a = document.createElement('a');
    a.href = imageUrl;
    a.download = `ai-image-${imageType}-${index + 1}.png`;
    a.click();
  };

  const handleCopy = (imageUrl: string) => {
    navigator.clipboard.writeText(imageUrl);
    // You can add toast notification here
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-6 lg:py-8">
        {/* Header */}
        <div className="mb-6 sm:mb-8">
          <h1 className="text-2xl sm:text-3xl font-bold text-black mb-2">
            T·∫°o H√¨nh ·∫£nh AI
          </h1>
          <p className="text-gray-600 text-sm sm:text-base">
            S·ª≠ d·ª•ng AI ƒë·ªÉ t·∫°o h√¨nh ·∫£nh marketing ch·∫•t l∆∞·ª£ng cao, ƒë·ªôc ƒë√°o v√† ph√π h·ª£p v·ªõi brand
          </p>
        </div>

        {/* Stats Grid */}
        <div className="grid grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-4 lg:gap-6 mb-6 sm:mb-8">
          <Card className="bg-white border-gray-200">
            <CardContent className="p-3 sm:p-4 lg:p-6">
              <div className="flex items-center justify-between">
                <div className="min-w-0 flex-1">
                  <p className="text-xs sm:text-sm text-gray-600 truncate">H√¨nh ·∫£nh ƒë√£ t·∫°o</p>
                  <p className="text-lg sm:text-xl lg:text-2xl font-bold text-black">156</p>
                </div>
                <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-purple-100 flex items-center justify-center shrink-0">
                  <ImageIcon className="w-4 h-4 sm:w-5 sm:h-5 text-purple-600" />
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="bg-white border-gray-200">
            <CardContent className="p-3 sm:p-4 lg:p-6">
              <div className="flex items-center justify-between">
                <div className="min-w-0 flex-1">
                  <p className="text-xs sm:text-sm text-gray-600 truncate">Th·ªùi gian ti·∫øt ki·ªám</p>
                  <p className="text-lg sm:text-xl lg:text-2xl font-bold text-black">48h</p>
                </div>
                <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-green-100 flex items-center justify-center shrink-0">
                  <Target className="w-4 h-4 sm:w-5 sm:h-5 text-green-600" />
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="bg-white border-gray-200">
            <CardContent className="p-3 sm:p-4 lg:p-6">
              <div className="flex items-center justify-between">
                <div className="min-w-0 flex-1">
                  <p className="text-xs sm:text-sm text-gray-600 truncate">T·ª∑ l·ªá s·ª≠ d·ª•ng</p>
                  <p className="text-lg sm:text-xl lg:text-2xl font-bold text-black">87%</p>
                </div>
                <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-blue-100 flex items-center justify-center shrink-0">
                  <Eye className="w-4 h-4 sm:w-5 sm:h-5 text-blue-600" />
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="bg-white border-gray-200">
            <CardContent className="p-3 sm:p-4 lg:p-6">
              <div className="flex items-center justify-between">
                <div className="min-w-0 flex-1">
                  <p className="text-xs sm:text-sm text-gray-600 truncate">Chi ph√≠ ti·∫øt ki·ªám</p>
                  <p className="text-lg sm:text-xl lg:text-2xl font-bold text-black">$2.4K</p>
                </div>
                <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-orange-100 flex items-center justify-center shrink-0">
                  <Palette className="w-4 h-4 sm:w-5 sm:h-5 text-orange-600" />
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Main Content */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 sm:gap-8">
          {/* Image Creation Form */}
          <div className="lg:col-span-2">
            <Card className="bg-white border-gray-200">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Camera className="w-5 h-5 text-purple-600" />
                  T·∫°o H√¨nh ·∫£nh AI
                </CardTitle>
                <CardDescription>
                  M√¥ t·∫£ h√¨nh ·∫£nh b·∫°n mu·ªën t·∫°o v√† AI s·∫Ω t·∫°o ra nh·ªØng h√¨nh ·∫£nh ph√π h·ª£p
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                {/* Image Type Selection */}
                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                  {imageTypes.map((type) => (
                    <div
                      key={type.value}
                      className={`p-4 border rounded-lg cursor-pointer transition-all duration-200 ${
                        imageType === type.value
                          ? "border-purple-300 bg-purple-50 shadow-sm"
                          : "border-gray-200 hover:border-gray-300 hover:bg-gray-50"
                      }`}
                      onClick={() => setImageType(type.value)}
                    >
                      <div className="text-center">
                        <div className="text-2xl mb-2">{type.icon}</div>
                        <div className="font-medium text-gray-900">{type.label}</div>
                        <div className="text-xs text-gray-600 mt-1">{type.description}</div>
                      </div>
                    </div>
                  ))}
                </div>

                {/* Image Details */}
                <div className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      M√¥ t·∫£ h√¨nh ·∫£nh *
                    </label>
                    <Textarea 
                      placeholder="VD: H√¨nh ·∫£nh s·∫£n ph·∫©m smartphone hi·ªán ƒë·∫°i, thi·∫øt k·∫ø t·ªëi gi·∫£n, n·ªÅn tr·∫Øng, √°nh s√°ng t·ª± nhi√™n, ch·∫•t l∆∞·ª£ng cao" 
                      className="min-h-[100px] w-full"
                    />
                  </div>

                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        K√≠ch th∆∞·ªõc
                      </label>
                      <Select defaultValue="512x512">
                        <SelectTrigger>
                          <SelectValue placeholder="Ch·ªçn k√≠ch th∆∞·ªõc" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="256x256">256x256 (Nh·ªè)</SelectItem>
                          <SelectItem value="512x512">512x512 (Trung b√¨nh)</SelectItem>
                          <SelectItem value="1024x1024">1024x1024 (L·ªõn)</SelectItem>
                          <SelectItem value="1024x1792">1024x1792 (Portrait)</SelectItem>
                          <SelectItem value="1792x1024">1792x1024 (Landscape)</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        Phong c√°ch ngh·ªá thu·∫≠t
                      </label>
                      <Select defaultValue="realistic">
                        <SelectTrigger>
                          <SelectValue placeholder="Ch·ªçn phong c√°ch" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="realistic">Hi·ªán th·ª±c</SelectItem>
                          <SelectItem value="artistic">Ngh·ªá thu·∫≠t</SelectItem>
                          <SelectItem value="cartoon">Ho·∫°t h√¨nh</SelectItem>
                          <SelectItem value="abstract">Tr·ª´u t∆∞·ª£ng</SelectItem>
                          <SelectItem value="vintage">C·ªï ƒëi·ªÉn</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>
                  </div>

                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        M√†u s·∫Øc ch·ªß ƒë·∫°o
                      </label>
                      <Select defaultValue="natural">
                        <SelectTrigger>
                          <SelectValue placeholder="Ch·ªçn m√†u s·∫Øc" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="natural">T·ª± nhi√™n</SelectItem>
                          <SelectItem value="vibrant">R·ª±c r·ª°</SelectItem>
                          <SelectItem value="muted">Nh·∫π nh√†ng</SelectItem>
                          <SelectItem value="monochrome">ƒê∆°n s·∫Øc</SelectItem>
                          <SelectItem value="warm">·∫§m √°p</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        S·ªë l∆∞·ª£ng h√¨nh ·∫£nh
                      </label>
                      <Select defaultValue="4">
                        <SelectTrigger>
                          <SelectValue placeholder="Ch·ªçn s·ªë l∆∞·ª£ng" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="1">1 h√¨nh</SelectItem>
                          <SelectItem value="2">2 h√¨nh</SelectItem>
                          <SelectItem value="4">4 h√¨nh</SelectItem>
                          <SelectItem value="6">6 h√¨nh</SelectItem>
                          <SelectItem value="8">8 h√¨nh</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Y√™u c·∫ßu b·ªï sung (T√πy ch·ªçn)
                    </label>
                    <Input 
                      placeholder="VD: Kh√¥ng c√≥ text, kh√¥ng c√≥ watermark, ch·∫•t l∆∞·ª£ng 4K" 
                      className="w-full"
                    />
                  </div>

                  <Button 
                    onClick={handleGenerate}
                    disabled={isGenerating}
                    className="w-full bg-purple-600 hover:bg-purple-700 text-white py-3"
                  >
                    {isGenerating ? (
                      <>
                        <RefreshCw className="w-4 h-4 mr-2 animate-spin" />
                        ƒêang t·∫°o h√¨nh ·∫£nh...
                      </>
                    ) : (
                      <>
                        <Sparkles className="w-4 h-4 mr-2" />
                        T·∫°o H√¨nh ·∫£nh v·ªõi AI
                      </>
                    )}
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* AI Insights & Tips */}
          <div className="space-y-6">
            <Card className="bg-white border-gray-200">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Lightbulb className="w-5 h-5 text-yellow-600" />
                  G·ª£i √Ω T·∫°o ·∫¢nh
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="p-3 bg-blue-50 border border-blue-200 rounded-lg">
                  <p className="text-sm text-blue-800">
                    <strong>M√¥ t·∫£ chi ti·∫øt:</strong> C√†ng m√¥ t·∫£ c·ª• th·ªÉ, AI c√†ng t·∫°o ra h√¨nh ·∫£nh ch√≠nh x√°c v·ªõi √Ω ƒë·ªãnh c·ªßa b·∫°n.
                  </p>
                </div>
                <div className="p-3 bg-green-50 border border-green-200 rounded-lg">
                  <p className="text-sm text-green-800">
                    <strong>Phong c√°ch nh·∫•t qu√°n:</strong> S·ª≠ d·ª•ng c√πng phong c√°ch ƒë·ªÉ t·∫°o b·ªô h√¨nh ·∫£nh ƒë·ªìng nh·∫•t.
                  </p>
                </div>
                <div className="p-3 bg-purple-50 border border-purple-200 rounded-lg">
                  <p className="text-sm text-purple-800">
                    <strong>K√≠ch th∆∞·ªõc ph√π h·ª£p:</strong> Ch·ªçn k√≠ch th∆∞·ªõc ph√π h·ª£p v·ªõi m·ª•c ƒë√≠ch s·ª≠ d·ª•ng (social media, website, in ·∫•n).
                  </p>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-white border-gray-200">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <BarChart3 className="w-5 h-5 text-green-600" />
                  Th·ªëng k√™ S·ª≠ d·ª•ng
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-600">S·∫£n ph·∫©m</span>
                  <Badge variant="secondary" className="bg-purple-100 text-purple-700">
                    45%
                  </Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-600">Social media</span>
                  <Badge variant="secondary" className="bg-blue-100 text-blue-700">
                    32%
                  </Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-600">Banner qu·∫£ng c√°o</span>
                  <Badge variant="secondary" className="bg-green-100 text-green-700">
                    18%
                  </Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-600">Logo & Brand</span>
                  <Badge variant="secondary" className="bg-orange-100 text-orange-700">
                    5%
                  </Badge>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-white border-gray-200">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Target className="w-5 h-5 text-orange-600" />
                  Best Practices
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <div className="text-sm text-gray-600 space-y-2">
                  <p>‚úÖ M√¥ t·∫£ r√µ r√†ng v√† c·ª• th·ªÉ</p>
                  <p>‚úÖ Ch·ªçn phong c√°ch ph√π h·ª£p v·ªõi brand</p>
                  <p>‚úÖ S·ª≠ d·ª•ng k√≠ch th∆∞·ªõc t·ªëi ∆∞u</p>
                  <p>‚úÖ T·∫°o nhi·ªÅu phi√™n b·∫£n ƒë·ªÉ l·ª±a ch·ªçn</p>
                  <p>‚úÖ Ki·ªÉm tra ch·∫•t l∆∞·ª£ng tr∆∞·ªõc khi s·ª≠ d·ª•ng</p>
                  <p>‚úÖ L∆∞u tr·ªØ v√† qu·∫£n l√Ω c√≥ h·ªá th·ªëng</p>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Generated Images Display */}
        {generatedImages.length > 0 && (
          <div className="mt-8">
            <Card className="bg-white border-gray-200">
              <CardHeader>
                <CardTitle className="flex items-center justify-between">
                  <span>H√¨nh ·∫£nh ƒë√£ t·∫°o ({generatedImages.length})</span>
                  <div className="flex gap-2">
                    <Button
                      onClick={() => setGeneratedImages([])}
                      variant="outline"
                      size="sm"
                      className="flex items-center gap-2"
                    >
                      <RefreshCw className="w-4 h-4" />
                      T·∫°o l·∫°i
                    </Button>
                  </div>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
                  {generatedImages.map((imageUrl, index) => (
                    <div key={index} className="relative group">
                      <div className="aspect-square rounded-lg overflow-hidden border border-gray-200">
                        <img
                          src={imageUrl}
                          alt={`AI Generated Image ${index + 1}`}
                          className="w-full h-full object-cover"
                        />
                      </div>
                      
                      {/* Overlay Actions */}
                      <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-200 rounded-lg flex items-center justify-center">
                        <div className="opacity-0 group-hover:opacity-100 transition-opacity duration-200 flex gap-2">
                          <Button
                            onClick={() => handleDownload(imageUrl, index)}
                            size="sm"
                            className="bg-white text-black hover:bg-gray-100"
                          >
                            <Download className="w-4 h-4" />
                          </Button>
                          <Button
                            onClick={() => handleCopy(imageUrl)}
                            size="sm"
                            variant="outline"
                            className="bg-white border-white text-black hover:bg-gray-100"
                          >
                            <Copy className="w-4 h-4" />
                          </Button>
                        </div>
                      </div>

                      {/* Image Info */}
                      <div className="mt-2 text-center">
                        <p className="text-sm font-medium text-gray-900">H√¨nh {index + 1}</p>
                        <p className="text-xs text-gray-500">512x512 ‚Ä¢ PNG</p>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        )}

        <Separator className="my-8" />
        <div className="text-sm text-gray-600">
          G·ª£i √Ω: H√¨nh ·∫£nh AI c√≥ th·ªÉ ti·∫øt ki·ªám th·ªùi gian v√† chi ph√≠ so v·ªõi thu√™ designer. Tuy nhi√™n, h√£y review k·ªπ tr∆∞·ªõc khi s·ª≠ d·ª•ng ƒë·ªÉ ƒë·∫£m b·∫£o ph√π h·ª£p v·ªõi brand guidelines c·ªßa b·∫°n.
        </div>
      </div>
    </div>
  );
}


